#! /bin/bash
###############################################
##
##  Copyright (2019, ) Institute of Software
##      Chinese Academy of Sciences
##          wuheng@otcaixiscas.ac.cn
##         wuyuewen@otcaix.iscas.ac.cn
##              2019-9-24
##
###############################################

DOCKER_VERSION=19.03.5

KUBE_VERSION=1.17.5

OVS_VERSION=2.11.0

KVM_VERSION=2.12.0

VIRT_VERSION=1.5.0

LIBVIRT_VERSION=4.5.0

function init-env()
{
  swapoff -a
  systemctl stop firewalld
  systemctl disable firewalld

  res=$(cat /etc/sysctl.conf | grep swappiness)
  sysctl net.bridge.bridge-nf-call-iptables=1
  if [[ -z $res ]]
  then
    echo "vm.swappiness = 0">> /etc/sysctl.conf
  fi
  echo "1" > /proc/sys/net/bridge/bridge-nf-call-iptables
  echo "1" > /proc/sys/net/ipv4/ip_forward >/dev/null

  systemctl enable kubelet
  systemctl start kubelet
}

function init-master()
{
  yum install epel-release -y
  yum install centos-release-openstack-train -y
  yum install -y libibverbs docker-ce-$DOCKER_VERSION docker-ce-cli-$DOCKER_VERSION kubeadm-$KUBE_VERSION kubectl-$KUBE_VERSION kubelet-$KUBE_VERSION openvswitch-$OVS_VERSION openvswitch-ipsec-$OVS_VERSION openvswitch-ovn-central-$OVS_VERSION openvswitch-ovn-common-$OVS_VERSION openvswitch-ovn-host-$OVS_VERSION openvswitch-ovn-vtep-$OVS_VERSION
  yum install usbutils libguestfs-tools-c python-openvswitch openvswitch-test openvswitch-devel openvswitch-ipsec python2-devel python2-pip libvirt-devel gcc gcc-c++ glib-devel glibc-devel virt-install -y
#  pip install --upgrade pip
  pip install --ignore-installed prometheus_client kubernetes libvirt-python==5.9.0 xmljson xmltodict watchdog pyyaml pyinstaller grpcio grpcio-tools protobuf psutil
  systemctl enable docker
  systemctl start  docker
  systemctl enable openvswitch
  systemctl start  openvswitch
  systemctl enable libvirtd
  systemctl start  libvirtd
}

function init-node()
{
  yum install epel-release -y
  yum install centos-release-openstack-train -y
  yum install -y libibverbs docker-ce-$DOCKER_VERSION docker-ce-cli-$DOCKER_VERSION kubeadm-$KUBE_VERSION kubectl-$KUBE_VERSION kubelet-$KUBE_VERSION openvswitch-$OVS_VERSION openvswitch-ipsec-$OVS_VERSION openvswitch-ovn-central-$OVS_VERSION openvswitch-ovn-common-$OVS_VERSION openvswitch-ovn-host-$OVS_VERSION openvswitch-ovn-vtep-$OVS_VERSION virt-manager-$VIRT_VERSION virt-install-$VIRT_VERSION libvirt-$LIBVIRT_VERSION qemu-kvm-ev-$KVM_VERSION
  yum install usbutils libguestfs-tools-c python-openvswitch openvswitch-test openvswitch-devel openvswitch-ipsec python2-devel python2-pip libvirt-devel gcc gcc-c++ glib-devel glibc-devel virt-install -y
#  pip install --upgrade pip
  pip install --ignore-installed prometheus_client kubernetes libvirt-python==5.9.0 xmljson xmltodict watchdog pyyaml pyinstaller grpcio grpcio-tools protobuf psutil  
  systemctl enable docker
  systemctl start  docker
  systemctl enable openvswitch
  systemctl start  openvswitch
  systemctl enable libvirtd
  systemctl start  libvirtd
}

function setup-master()
{

  ## init
  init-env
  
  ## Kubernetes
  kubeadm init --config /etc/kubevmm/yamls/cloudplus/kubeadm.yaml 
 
  rm -rf $HOME/.kube
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
  iptables -P FORWARD ACCEPT

  ## Calico
  for img in `cat /etc/kubevmm/yamls/cloudplus/calico.yaml  | grep image |awk -F"image:" '{print$2}'`
  do
    echo "docker pull "$img
    docker pull $img
  done

  podcidr=$(kubeadm config view | grep podSubnet | awk -F": " '{print$2}')
  rm -rf /tmp/calico.yaml
  cp /etc/kubevmm/yamls/cloudplus/calico.yaml /tmp/calico.yaml
  sed -i "s:POD_CIDR:${podcidr}:g" /tmp/calico.yaml
  kubectl create -f /tmp/calico.yaml
  rm -rf /tmp/calico.yaml

  ## Plugins

  for plugin in `ls /etc/kubevmm/yamls/cloudplus/ | grep kubevirt`
  do
    kubectl apply -f /etc/kubevmm/yamls/cloudplus/$plugin
  done

  ## Network
  kubeovn-adm start-central 
  
  ## prometheus & grafana
  bash /etc/kubevmm/monitor/taint.sh `hostname`
  kubectl apply -f /etc/kubevmm/monitor/node-exporter.yaml
  kubectl apply -f /etc/kubevmm/monitor/prometheus.yaml
  kubectl apply -f /etc/kubevmm/monitor/grafana.yaml
}

function setup-node()
{
  ## init
  init-env

  # start our instances
  kubectl apply -f /etc/kubevmm/yamls/cloudplus/node.yaml
  kubeovn-adm start-worker
  
  ## prometheus & grafana
  kubectl apply -f /etc/kubevmm/monitor/node-exporter.yaml
}

function cmddesc()
{
  echo -e "Welcome to kubevirt-ctl, the install plugin for Kubernetes."
  echo -e "kubevirt-ctl: missing command name (use --help for help)\n"
}


function help()
{
  cmddesc
  echo -e "Commands:"
  echo -e "  init-master   :\t(Init) : Install softwares for Kubernetes Master"
  echo -e "  init-node     :\t(Init) : Install softwares for Kubernetes Node"
  echo -e "  setup-master  :\t(Setup): Install Kubernetes Master"
  echo -e "  setup-node    :\t(Setup): Install Kubernetes Node"
}


case $1 in
  "init-master")
    init-master $*
    ;;
  "init-node")
    init-node $*
    ;;
  "setup-master")
    setup-master $*
    ;;
  "setup-node")
    setup-node $*
    ;;
  "--help")
    help
    ;;
  *)
  help
  ;;
esac
